volumes:
  pg_data:
  redis_data:

networks:
  default:
    name: app_network

services:
  pg:
    image: postgres:15.4
    restart: always
    ports:
      - "15432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    command: [ "postgres", "-c", "log_statement=all", "-c", "log_min_messages=INFO", "-c", "log_min_duration_statement=0" ]
    healthcheck:
      test: [ 'CMD-SHELL', 'psql -U $${POSTGRES_USER} -c "select 1" -d $${POSTGRES_DB}' ]
      interval: 10s
      timeout: 3s
      retries: 5

  migrator:
    build:
      context: ../
      dockerfile: ./build/migrator/Dockerfile
    environment:
      PG_URL: postgres://user:password@pg:5432/db?sslmode=disable
    volumes:
      - ../migrations:/migrations
    depends_on:
      pg:
        condition: service_healthy

  redis:
    image: redis:7.2
    restart: always
    ports:
      - "16379:6379"
    volumes:
      - redis_data:/data
    command: [ "redis-server", "--save", "60", "1", "--loglevel", "warning" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 3s
      retries: 5

  service:
    build:
      context: ../
      dockerfile: ./build/service/Dockerfile
    environment:
      APP_PORT: 9000
      APP_PG_DSN: postgres://user:password@pg:5432/db
      APP_REDIS_DSN: redis://redis:6379
    ports:
      - "9000:9000"
    depends_on:
      migrator:
        condition: service_completed_successfully
      redis:
        condition: service_healthy